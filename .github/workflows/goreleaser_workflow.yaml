name: Release Workflow


#déclancher le workflow à chaque nouveau tag ( pour tester git tag v2.0.0 - git push origin)
on:
  push:
    tags:
      - '*'
#création du job appelé build avec un ensemble de permissions pour son éxecution.
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
     actions: write
     checks: write
     contents: write
     deployments: write
     id-token: write
     issues: write
     pull-requests: write
     repository-projects: write
     security-events: write
     statuses: write

#récuperer le code du repo GITHUB et configurer l'environnement du projet.
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

#construire et publier le projet en utilisant goreleaser et goreleaser-action
      - name: Build and Release project 
        uses: goreleaser/goreleaser-action@v4
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#configurer QEMU 
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

#configurer Docker Build pour notre docker
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

#s'authentifier à Docker Hub ( il faut créer un compte docker hub et générer un token)
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#construire et publier l'image docker en utilisant build-push-action, il est important de saisir le nom de votre token dans le tag ( une fois le tag réussi on peut voir notre image dans le docker - tags )
      - name: Build and Publish Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/4dvp_super_calculator:${{  github.ref_name }}
